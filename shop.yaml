swagger: "2.0"
info:
  description: "Shop Microservice description."
  version: "1.0.0"
  title: "Shop Microservice"
tags:
- name: "Shop"
- name: "Branch"
- name: "Category"
paths:
  /v1/shop:
    get:
      tags:
      - "Shop"
      summary: "List Shops"
      description: List Shops
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: local
        in: header
        description: language to return the data based on it
        required: true
        type: string
        enum: [ar-SA, en-US, Multi]

      - name: "name"
        in: "query"
        required: false
        type: "string"
        description: Offer Name

      - name: "page"
        in: "query"
        required: false
        type: "integer"
        description: page number
        
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        description: limit to be returned
        

      - in: query
        name: nearest
        required: false
        type: boolean
        description: get nearest shops by location
        
      - in: query
        name: long
        required: false
        type: integer
        description: user location longitude
        
      - in: query
        name: lat
        required: false
        type: integer
        description: user location latitude
        
      - in: query
        name: category
        required: false
        type: string
        description: filter shops by category ID

      - name: "ids"
        in: "query"
        required: false
        type: "string"
        description: ids of shops to be returned ex. 5f4e5f1bd75ccc754ffdcc02, 5f4e5f1bd75ccc754ffdcc02
        
      - in: query
        name: status
        required: false
        type: string
        enum: [active, suspended]
        description: filter shops by status

      - in: query
        name: hasOrders
        required: false
        type: boolean
        description: filter shops by has orders
        
      - in: query
        name: available
        required: false
        type: boolean
        
      - in: query
        name: hasOffers
        required: false
        type: boolean
        enum: [true]
        description: filter shops by has offers
        
      responses:
        "200":
          description: "Successful operation"
        "404":
          description: "Not found"
        '400':
          description: "Bad Request"
          
    post:
      tags:
      - "Shop"
      summary: "Create Shop APi"
      description: Create Shop APi
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Body"
        description: "Create Shop APi"
        required: true
        schema:
          $ref: "#/definitions/Shop"
      responses:
        "200":
          description: "Successful operation"
        "404":
          description: "Not found"
        '400':
          description: "Bad Request"
          
  /v1/shop/{id}:
    get:
      tags:
      - "Shop"
      summary: "Get Shop By ID"
      description: Get Shop By ID
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: local
        in: header
        description: language to return the data based on it
        required: true
        type: string
        enum: [ar-SA, en-US, Multi]
        
      - name: id
        in: path
        type: "string"
        description: shop Id
        required: true
        
      - in: query
        name: nearest
        required: false
        type: boolean
        description: get nearest shops by location
        
      - in: query
        name: long
        required: false
        type: integer
        description: user location longitude
        
      - in: query
        name: lat
        required: false
        type: integer
        description: user location latitude
          
      - in: query
        name: available
        required: false
        type: boolean
        
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
    patch:
      tags:
      - "Shop"
      summary: "Update Shop By ID"
      description: Update Shop By ID
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        type: "string"
        description: shop Id
        required: true
        
      - in: "body"
        name: "Body"
        description: "Update Many Shops APi"
        required: true
        schema:
          $ref: "#/definitions/ShopPatch"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
    delete:
      tags:
      - "Shop"
      summary: "Delete Shop"
      description: Delete Shop
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        type: "string"
        description: Shop ID
        required: true
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
          
  /v1/shop/{id}/check-status:
    get:
      tags:
      - "Shop"
      summary: "Check Shop Status By ID"
      description: Check Shop Status By ID
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:

      - name: id
        in: path
        type: "string"
        description: shop Id
        required: true

      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
          
  /v1/branch:
    get:
      tags:
      - "Branch"
      summary: "List Branchs"
      description: List Branchs
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: local
        in: header
        description: language to return the data based on it
        required: true
        type: string
        enum: [ar-SA, en-US, Multi]

      - name: "shopId"
        in: "query"
        required: false
        type: "string"
        description: filter branches by Shop ID

      - name: "name"
        in: "query"
        required: false
        type: "string"
        description: search on branches by name

      - name: "ids"
        in: "query"
        required: false
        type: "string"
        description: ids of Branchs to be returned ex. 5f4e5f1bd75ccc754ffdcc02, 5f4e5f1bd75ccc754ffdcc02
        
      - in: query
        name: available
        required: false
        type: boolean
        
      responses:
        "200":
          description: "Successful operation"
        "404":
          description: "Not found"
        '400':
          description: "Bad Request"
          
    post:
      tags:
      - "Branch"
      summary: "Create Branch APi"
      description: Create Branch APi
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Body"
        description: "Create Branch APi"
        required: true
        schema:
          $ref: "#/definitions/Branch"
      responses:
        "200":
          description: "Successful operation"
        "404":
          description: "Not found"
        '400':
          description: "Bad Request"
          
          
  /v1/branch/{id}:
    get:
      tags:
      - "Branch"
      summary: "Get Branch By ID"
      description: Get Branch By ID
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: local
        in: header
        description: language to return the data based on it
        required: true
        type: string
        enum: [ar-SA, en-US, Multi]
        
      - name: id
        in: path
        type: "string"
        description: branch Id
        required: true
          
      - in: query
        name: available
        required: false
        type: boolean
        
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"

    patch:
      tags:
      - "Branch"
      summary: "Update Branch By ID"
      description: Update Branch By ID
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        type: "string"
        description: shop Id
        required: true
        
      - in: "body"
        name: "Body"
        description: "Update Many Branchs APi"
        required: true
        schema:
          $ref: "#/definitions/BranchPatch"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
    delete:
      tags:
      - "Branch"
      summary: "Delete Branch"
      description: Delete Branch
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        type: "string"
        description: Branch ID
        required: true
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"

  /v1/category:
    get:
      tags:
      - "Category"
      summary: "List Categories"
      description: List Categories
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: local
        in: header
        description: language to return the data based on it
        required: true
        type: string
        enum: [ar-SA, en-US, Multi]

      - name: "name"
        in: "query"
        required: false
        type: "string"
        description: Category Name

      - name: "page"
        in: "query"
        required: false
        type: "integer"
        description: page number
        
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        description: limit to be returned
        

      - in: query
        name: type
        required: false
        type: boolean
        description: filter categories by type (product | shop)
        
      - in: query
        name: parent
        required: false
        type: string
        description: filter categories by parent ID

      - name: "ids"
        in: "query"
        required: false
        type: "string"
        description: ids of Categories to be returned ex. 5f4e5f1bd75ccc754ffdcc02, 5f4e5f1bd75ccc754ffdcc02
        
      responses:
        "200":
          description: "Successful operation"
        "404":
          description: "Not found"
        '400':
          description: "Bad Request"
          
    post:
      tags:
      - "Category"
      summary: "Create Category APi"
      description: Create Category APi
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Body"
        description: "Create Category APi"
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        "200":
          description: "Successful operation"
        "404":
          description: "Not found"
        '400':
          description: "Bad Request"
          
          
  /v1/category/{id}:
    get:
      tags:
      - "Category"
      summary: "Get Category By ID"
      description: Get Category By ID
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: local
        in: header
        description: language to return the data based on it
        required: true
        type: string
        enum: [ar-SA, en-US, Multi]
        
      - name: id
        in: path
        type: "string"
        description: category Id
        required: true
          
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"

    patch:
      tags:
      - "Category"
      summary: "Update Category By ID"
      description: Update Category By ID
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        type: "string"
        description: Category Id
        required: true
        
      - in: "body"
        name: "Body"
        description: "Update Many Categories APi"
        required: true
        schema:
          $ref: "#/definitions/CategoryPatch"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
    delete:
      tags:
      - "Category"
      summary: "Delete Category"
      description: Delete Category
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        type: "string"
        description: Category ID
        required: true
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"


definitions:
  Shop:
    type: "object"
    properties:
      nameEn:
        type: string
        example: "english name"
      nameAr:
        type: string
        example: "arabic name"
      descriptionEn:
        type: string
        example: "english description"
      descriptionAr:
        type: string
        example: "arabic Description"
      status:
        type: string
        example: "active"
      category:
        type: string
        example: "5f69b00c722063000d9cc85f"
      classificationType:
        type: string
        example: "Cheap"
      country:
        type: string
        example: "Egypt"
      role:
        type: string
        example: "Admin"
      profitPercentage:
        type: integer
        example: 0
      logo:
        type: string
        example: "https://learnworthy.net/wp-content/uploads/2019/12/Why-programming-is-the-skill-you-have-to-learn.jpg"
      cover:
        type: string
        example: "https://learnworthy.net/wp-content/uploads/2019/12/Why-programming-is-the-skill-you-have-to-learn.jpg"
    xml:
      name: "Shop"
  ShopPatch:
    type: "object"
    properties:
      ingredients:
        type: "array"
        items:
          type: string
          enum: ["5f6cedaaa4ab557befedac30"]
      nameEn:
        type: string
        example: "english name"
      nameAr:
        type: string
        example: "arabic name"
      descriptionEn:
        type: string
        example: "english description"
      descriptionAr:
        type: string
        example: "arabic Description"
      status:
        type: string
        example: "active"
      category:
        type: string
        example: "5f69b00c722063000d9cc85f"
    xml:
      name: "ShopPatch"
  Branch:
    type: "object"
    properties:
      shopId:
        type: string
        example: "Shop Id"
      nameEn:
        type: string
        example: "english name"
      nameAr:
        type: string
        example: "arabic name"
      descriptionEn:
        type: string
        example: "english description"
      descriptionAr:
        type: string
        example: "arabic Description"
      creationDate:
        type: string
      status:
        type: string
        example: "active"
      location:
        type: object
        properties:
          long:
            type: string
          lat:
            type: string
      workingHours:
        type: "array"
        items:
          type: object
          properties:
            startTime:
              type: integer
            endTime:
              type: string
            day:
              type: string
    xml:
      name: "Branch"
  BranchPatch:
    type: "object"
    properties:
      nameEn:
        type: string
        example: "english name"
      nameAr:
        type: string
        example: "arabic name"
      status:
        type: string
        example: "active"
      shopId:
        type: string
        example: "Shop Id"
      radius:
        type: integer
        example: "1"
      location:
        type: object
        properties:
          long:
            type: string
          lat:
            type: string
            
      availability:
        type: string
        enum: ["AcceptingOrders", "Busy"]
        description: "Not Required if all"
      workingHours:
        type: "array"
        items:
          type: object
          properties:
            startTime:
              type: integer
            endTime:
              type: string
            day:
              type: string
    xml:
      name: "BranchPatch"
      
  Category:
    type: "object"
    properties:
      nameEn:
        type: string
        example: "english name"
      nameAr:
        type: string
        example: "arabic name"
      descriptionEn:
        type: string
        example: "english description"
      descriptionAr:
        type: string
        example: "arabic Description"
      type:
        type: string
        example: "product"
      parent:
        type: string
        example: "5f56486fca4f81d9974c7ed1"
      icon:
        type: string
        example: "https://www.brandeps.com/icon-download/S/Shop-icon-vector-03.svg"
    xml:
      name: "Category"
  CategoryPatch:
    type: "object"
    properties:
      nameEn:
        type: string
        example: "english name"
      nameAr:
        type: string
        example: "arabic name"
      status:
        type: string
        example: "active"
      category:
        type: string
        example: "5f69b00c722063000d9cc85f"
    xml:
      name: "CategoryPatch"
      
externalDocs:
  description: "Discover back end api"
  url: "https://auctionsa.atlassian.net/wiki/spaces/BAC/pages/249266177/backend+API+links"
